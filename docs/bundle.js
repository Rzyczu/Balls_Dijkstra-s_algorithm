/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/Game.ts":
/*!********************************!*\
  !*** ./src/components/Game.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _pathFinder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pathFinder */ \"./src/components/pathFinder.ts\");\n\r\n/**\r\n *\r\n * @class Game Klasa w któej jest zawarta cała gra.\r\n * @implements rozmiar mapy\r\n *\r\n * */\r\nvar Game = /** @class */ (function () {\r\n    function Game(n) {\r\n        /**\r\n         * @public\r\n         */\r\n        this.array = [];\r\n        this.colors = [\"red\", 'blue', 'green', 'black'];\r\n        this.Balls = [];\r\n        this.nextBallsColors = [];\r\n        this.n = n;\r\n        for (var i = 0; i < 3; i++) {\r\n            this.nextBallsColors[i] = Math.floor(Math.random() * this.colors.length);\r\n        }\r\n        var nextBallsDiv = document.createElement(\"div\");\r\n        nextBallsDiv.style.position = \"absolute\";\r\n        nextBallsDiv.className = \"nextBallsDiv\";\r\n        nextBallsDiv.id = \"nextBallsDiv\";\r\n        nextBallsDiv.style.left = 50 * n + 100 + \"px\";\r\n        nextBallsDiv.style.top = 50 + \"px\";\r\n        document.getElementById(\"gameBoard\").appendChild(nextBallsDiv);\r\n        var title = document.createElement(\"h1\");\r\n        title.id = \"nextBallsTitle\";\r\n        title.className = \"nextBallsTitle\";\r\n        title.innerHTML = \"Next Balls:\";\r\n        document.getElementById(\"nextBallsDiv\").appendChild(title);\r\n        var BallsDiv = document.createElement(\"div\");\r\n        BallsDiv.className = \"ballsDiv\";\r\n        BallsDiv.id = \"ballsDiv\";\r\n        document.getElementById(\"nextBallsDiv\").appendChild(BallsDiv);\r\n        var tableDiv = document.createElement(\"div\");\r\n        tableDiv.className = \"tableDiv\";\r\n        tableDiv.id = \"tableDiv\";\r\n        document.getElementById(\"gameBoard\").appendChild(tableDiv);\r\n        var circleDiv = document.createElement(\"div\");\r\n        circleDiv.className = \"circleDiv\";\r\n        circleDiv.id = \"circleDiv\";\r\n        document.getElementById(\"gameBoard\").appendChild(circleDiv);\r\n        this.createArr();\r\n    }\r\n    /**\r\n     *\r\n     * @function updateNextBalls  uzupełnia kolory NextBalls\r\n     *\r\n     */\r\n    Game.prototype.updateNextBalls = function () {\r\n        document.getElementById(\"ballsDiv\").innerHTML = '';\r\n        var nextBall1 = document.createElement(\"div\");\r\n        nextBall1.className = \"circle nextBall\";\r\n        nextBall1.id = \"nextBall1\";\r\n        nextBall1.style.backgroundColor = this.colors[this.nextBallsColors[0]];\r\n        document.getElementById(\"ballsDiv\").appendChild(nextBall1);\r\n        var nextBall2 = document.createElement(\"div\");\r\n        nextBall2.className = \"circle nextBall\";\r\n        nextBall2.id = \"nextBall2\";\r\n        nextBall2.style.backgroundColor = this.colors[this.nextBallsColors[1]];\r\n        document.getElementById(\"ballsDiv\").appendChild(nextBall2);\r\n        var nextBall3 = document.createElement(\"div\");\r\n        nextBall3.className = \"circle nextBall\";\r\n        nextBall3.id = \"nextBall1\";\r\n        nextBall3.style.backgroundColor = this.colors[this.nextBallsColors[2]];\r\n        document.getElementById(\"ballsDiv\").appendChild(nextBall3);\r\n    };\r\n    /**\r\n     *\r\n     * @function tworzy this.array[] która zawiera całą planszę,\r\n     * w miejscach kulek są wpisane ich kolory,\r\n     * a w miejscach pustych 0.\r\n     *\r\n     * \"A\" jest kulką aktywną, klikniętą\r\n     * \"Z\" jest miescem do którego ma znaleźc trasę i przenieść kulkę\r\n     *\r\n     */\r\n    Game.prototype.createArr = function () {\r\n        var style = 'font-weight: bold; font-size: 30px;color: red; text-shadow: 3px 3px 0 rgb(0,0,38)';\r\n        console.log('%c[y, x]', style);\r\n        for (var i = 0; i < this.n + 2; i++) {\r\n            this.array[i] = [];\r\n            for (var j = 0; j < this.n + 2; j++) {\r\n                if (j == 0 || j == this.n + 1 || i == 0 || i == this.n + 1)\r\n                    this.array[i][j] = 'X';\r\n                else\r\n                    this.array[i][j] = 0;\r\n            }\r\n        }\r\n        for (var i = 0; i < 3; i++) {\r\n            this.randomBall(i);\r\n        }\r\n        for (var i = 0; i < 3; i++) {\r\n            this.nextBallsColors[i] = Math.floor(Math.random() * this.colors.length);\r\n        }\r\n        this.updateNextBalls();\r\n        this.createTable();\r\n    };\r\n    /**\r\n     * @function randomBall tworzy jedną Kulkę-Obiekt implementując interfejs Ball. Kulka ma losowe x,y.\r\n     *\r\n     * @param i Zawiera numer koloru, podany z nextBalls[]\r\n     */\r\n    Game.prototype.randomBall = function (i) {\r\n        var CordX = Math.floor(Math.random() * this.n);\r\n        var CordY = Math.floor(Math.random() * this.n);\r\n        var Color = this.nextBallsColors[i];\r\n        if (this.array[CordX][CordY] == 0) {\r\n            this.array[CordX][CordY] = this.colors[Color];\r\n            var ball = { id: this.Balls.length, x: CordX, y: CordY, color: this.colors[Color] };\r\n            this.Balls.push(ball);\r\n            var div = document.createElement(\"div\");\r\n            div.style.position = \"absolute\";\r\n            div.className = \"circle\";\r\n            div.id = CordX + \"_\" + CordY;\r\n            div.style.top = 50 * CordX + 12.5 + \"px\";\r\n            div.style.left = 50 * CordY + 12.5 + \"px\";\r\n            div.style.backgroundColor = this.colors[Color];\r\n            document.getElementById(\"circleDiv\").appendChild(div);\r\n        }\r\n        else {\r\n            this.randomBall(i);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @function createTable tworzy Tabelę HTML na stronie w których zawarte są kulli oraz cała plansza\r\n     *\r\n     */\r\n    Game.prototype.createTable = function () {\r\n        // this.divBoard = document.getElementById(\"gameBoard\");\r\n        for (var i = 1; i < this.n + 1; i++) {\r\n            for (var j = 1; j < this.n + 1; j++) {\r\n                var div = document.createElement(\"div\");\r\n                div.style.position = \"absolute\";\r\n                div.className = \"table\";\r\n                div.id = i + \"_\" + j;\r\n                div.style.left = 50 * j + \"px\";\r\n                div.style.top = 50 * i + \"px\";\r\n                document.getElementById(\"tableDiv\").appendChild(div);\r\n            }\r\n        }\r\n        this.clickBallListener();\r\n        this.mouseoverListener();\r\n        this.clickTableListener();\r\n    };\r\n    /**\r\n     *\r\n     * @function clickTableListener wydarza się po kliknięciu w element tabeli\r\n     * (Nie kulkę - Element klasy \"table)\"\r\n     *\r\n     */\r\n    Game.prototype.clickTableListener = function () {\r\n        var _this = this;\r\n        document.getElementById(\"tableDiv\").addEventListener(\"click\", function (e) {\r\n            if (_this.metaBall != null && _this.startBall != null) {\r\n                _this.moveBall(e.target);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n  *\r\n  * @function clickBallListener która wydarza się po kliknięciu w element kulki.\r\n  * Służy do wybrania kulki aktywnej.)\"\r\n  *\r\n  */\r\n    Game.prototype.clickBallListener = function () {\r\n        var _this = this;\r\n        document.getElementById(\"circleDiv\").addEventListener(\"click\", function (e) {\r\n            var tableDivs = document.getElementsByClassName(\"table\");\r\n            Array.from(tableDivs).forEach(function (div) {\r\n                div.className = \"table\";\r\n            });\r\n            if (_this.startBall == null) {\r\n                _this.metaBall = null;\r\n                _this.startBall = e.target;\r\n                _this.startBall.className = \"circle active\";\r\n                _this.startBall.style.left = (parseInt(_this.startBall.style.left) - 12) + \"px\";\r\n                _this.startBall.style.top = (parseInt(_this.startBall.style.top) - 12) + \"px\";\r\n            }\r\n            else if (_this.startBall == e.target) {\r\n                _this.metaBall = null;\r\n                _this.startBall.className = \"circle\";\r\n                _this.startBall.style.left = (parseInt(_this.startBall.style.left) + 12.5) + \"px\";\r\n                _this.startBall.style.top = (parseInt(_this.startBall.style.top) + 12.5) + \"px\";\r\n                _this.startBall = null;\r\n            }\r\n            else {\r\n                _this.metaBall = null;\r\n                _this.startBall.className = \"circle\";\r\n                _this.startBall.style.left = (parseInt(_this.startBall.style.left) + 12.5) + \"px\";\r\n                _this.startBall.style.top = (parseInt(_this.startBall.style.top) + 12.5) + \"px\";\r\n                _this.startBall = e.target;\r\n                _this.startBall.className = \"circle active\";\r\n                _this.startBall.style.left = (parseInt(e.target.style.left) - 12) + \"px\";\r\n                _this.startBall.style.top = (parseInt(e.target.style.top) - 12) + \"px\";\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @function moveBall wydarza się po wywołaniu funkcji kliknięcia w Tabelę Divów,\r\n     * jeśli wszystkie warunki są spełnione - jest metaBall i startBall).\r\n     * To tutaj następuje przenoszenie kulki\r\n     * oraz tworzenia 3 nowych kulek - randomBall() w forze\r\n     * oraz wylosowania trzech kolejnych kulek\r\n     * i zmiany NextBalls - updateNextBalls()\r\n     *\r\n     * @param metaPoint obiekt HTML mety\r\n     *\r\n     */\r\n    Game.prototype.moveBall = function (metaPoint) {\r\n        this.startBall.className = \"circle\";\r\n        var startID = [parseInt(this.startBall.id.split('_')[0]), parseInt(this.startBall.id.split('_')[1])];\r\n        var metaID = [parseInt(metaPoint.id.split('_')[0]), parseInt(metaPoint.id.split('_')[1])];\r\n        this.array[startID[0]][startID[1]] = 0;\r\n        this.array[metaID[0]][metaID[1]] = this.startBall.style.backgroundColor;\r\n        this.startBall.id = metaID[0] + \"_\" + metaID[1];\r\n        this.startBall.style.top = metaID[0] * 50 + 12.5 + \"px\";\r\n        this.startBall.style.left = metaID[1] * 50 + 12.5 + \"px\";\r\n        this.startBall = null;\r\n        var tableDivs = document.getElementsByClassName(\"table\");\r\n        Array.from(tableDivs).forEach(function (div) {\r\n            div.className = \"table\";\r\n        });\r\n        //Tworzenie 3 kulek po ruchu\r\n        for (var i = 0; i < 3; i++) {\r\n            this.randomBall(i);\r\n        }\r\n        for (var i = 0; i < 3; i++) {\r\n            this.nextBallsColors[i] = Math.floor(Math.random() * this.colors.length);\r\n        }\r\n        this.updateNextBalls();\r\n    };\r\n    /**\r\n  *\r\n  * @function mouseoverListener wydarza się po najechaniu tabeli (Nie kulek - Element klasy \"table\")\r\n  * Przy każdym najechaniu jeśli jest startBall występuje klasa patchFinfing,\r\n  * któa wyszukuje najkrótszą klasię z punktu 'A' do punktu 'Z'\r\n  * oraz ją koloruje - daje divom klasę \"step\".\r\n  *\r\n  * Pzry każdym nowym najechaniu tabeli wszystkie divy przyjmują na nowo klasę \"table\"\r\n  * kasując przy tym niektóre klasy \"step\"\r\n  *\r\n  */\r\n    Game.prototype.mouseoverListener = function () {\r\n        var _this = this;\r\n        var circleDivs = document.getElementsByClassName(\"circle\");\r\n        var tableDivs = document.getElementsByClassName(\"table\");\r\n        Array.from(tableDivs).forEach(function (div) {\r\n            div.addEventListener(\"mouseover\", function (e) {\r\n                if (_this.startBall != null) {\r\n                    //Sprawdza czy na klikanym divie nie ma kółka\r\n                    var notBall_1 = 1;\r\n                    Array.from(circleDivs).forEach(function (circle) {\r\n                        if (e.target.id == circle.id) {\r\n                            notBall_1--;\r\n                        }\r\n                    });\r\n                    Array.from(tableDivs).forEach(function (div) {\r\n                        div.className = \"table\";\r\n                    });\r\n                    if (notBall_1) {\r\n                        _this.metaBall = e.target;\r\n                        var wayFinfing_1 = new _pathFinder__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.parse(JSON.stringify(_this.array)), _this.startBall, _this.metaBall);\r\n                        console.log(wayFinfing_1[\"way\"]);\r\n                        if (wayFinfing_1[\"way\"].length > 0) {\r\n                            Array.from(tableDivs).forEach(function (div) {\r\n                                for (var i = 0; i < wayFinfing_1['way'].length; i++) {\r\n                                    if (wayFinfing_1['way'][i][\"y\"] + \"_\" + wayFinfing_1['way'][i][\"x\"] == div.id) {\r\n                                        div.className = \"table step\";\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            _this.metaBall = null;\r\n                            _this.startBall.className = \"circle\";\r\n                            _this.startBall.style.left = (parseInt(_this.startBall.style.left) + 12.5) + \"px\";\r\n                            _this.startBall.style.top = (parseInt(_this.startBall.style.top) + 12.5) + \"px\";\r\n                            _this.startBall = null;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Game;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Game);\r\n\n\n//# sourceURL=webpack://kulki/./src/components/Game.ts?");

/***/ }),

/***/ "./src/components/pathFinder.ts":
/*!**************************************!*\
  !*** ./src/components/pathFinder.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\r\n * @class która jest wywoływana w celu znalezienia ścieżki Patch Findingu.\r\n *\r\n * */\r\nvar pathFinder = /** @class */ (function () {\r\n    function pathFinder(arrayA, startBall, metaBall) {\r\n        this.arrayA = [];\r\n        this.stepCount = 1;\r\n        this.way = [];\r\n        this.arrayA = arrayA;\r\n        this.start = [parseInt(startBall.id.split('_')[0]), parseInt(startBall.id.split('_')[1])];\r\n        this.meta = [parseInt(metaBall.id.split('_')[0]), parseInt(metaBall.id.split('_')[1])];\r\n        this.divsTable = document.querySelectorAll(\".table\");\r\n        this.arrayA[this.start[0]][this.start[1]] = \"A\";\r\n        this.arrayA[this.meta[0]][this.meta[1]] = \"Z\";\r\n        // this.fromWhere.push(this.start)\r\n        // console.table(this.fromWhere)\r\n        var arr = [this.start];\r\n        this.step(arr);\r\n        //this.start[0], this.start[1])\r\n    }\r\n    /**\r\n     *\r\n     * @function step wpisuje w tablicę arrayA ścieżkę do patchfindingu\r\n     * 1. w sąsiednich polach tablicy (jeśli nie są zajęte) \"S\" wpisz 1\r\n     * 2.  sąsiednim pozycją jedynek wpisz 2\r\n     * 3. postępuj tak dalej aż do braku możliwości numerowania kolejnych ruchów lub trafienia na \"Z\"\r\n     * Tu jest opisany jeden taki krok, który się powtarza w kółko jak zostało to opisane w punkcie 3\r\n     *\r\n     * Gdy funkcja odnajdzie punkt \"Z\" - da się do niego dotrzeć\r\n     * @param froWhere - tablia, która ma tablice z punktami  x,y - skąd zaczynać liczyć\r\n     *\r\n     *\r\n     */\r\n    pathFinder.prototype.step = function (froWhere) {\r\n        var _this = this;\r\n        var arr = [];\r\n        var zFind = false;\r\n        // for (let i = 0; i < froWhere.length; i++) {\r\n        //     // console.log(x, y)\r\n        //     if (this.arrayA[froWhere[i][0] - 1][froWhere[i][1]] == 'Z') {\r\n        //         zFind = true\r\n        //     } else if (this.arrayA[froWhere[i][0] - 1][froWhere[i][1]] == 0) {\r\n        //         this.arrayA[froWhere[i][0] - 1][froWhere[i][1]] = this.stepCount\r\n        //         arr.push([froWhere[i][0] - 1, froWhere[i][1]])\r\n        //     }\r\n        //     if (this.arrayA[froWhere[i][0] + 1][froWhere[i][1]] == 'Z') {\r\n        //         zFind = true\r\n        //     } else if (this.arrayA[froWhere[i][0] + 1][froWhere[i][1]] == 0) {\r\n        //         this.arrayA[froWhere[i][0] + 1][froWhere[i][1]] = this.stepCount\r\n        //         arr.push([froWhere[i][0] + 1, froWhere[i][1]])\r\n        //     }\r\n        //     if (this.arrayA[froWhere[i][0]][froWhere[i][1] - 1] == 'Z') {\r\n        //         zFind = true\r\n        //     } else if (this.arrayA[froWhere[i][0]][froWhere[i][1] - 1] == 0) {\r\n        //         this.arrayA[froWhere[i][0]][froWhere[i][1] - 1] = this.stepCount\r\n        //         arr.push([froWhere[i][0], froWhere[i][1] - 1])\r\n        //     }\r\n        //     if (this.arrayA[froWhere[i][0]][froWhere[i][1] + 1] == 'Z') {\r\n        //         zFind = true\r\n        //     } else if (this.arrayA[froWhere[i][0]][froWhere[i][1] + 1] == 0) {\r\n        //         this.arrayA[froWhere[i][0]][froWhere[i][1] + 1] = this.stepCount\r\n        //         arr.push([froWhere[i][0], froWhere[i][1] + 1])\r\n        //     }\r\n        // }\r\n        froWhere.forEach(function (value) {\r\n            if (_this.arrayA[value[0] - 1][value[1]] == 'Z') {\r\n                zFind = true;\r\n            }\r\n            else if (_this.arrayA[value[0] - 1][value[1]] == 0) {\r\n                _this.arrayA[value[0] - 1][value[1]] = _this.stepCount;\r\n                arr.push([value[0] - 1, value[1]]);\r\n            }\r\n            if (_this.arrayA[value[0] + 1][value[1]] == 'Z') {\r\n                zFind = true;\r\n            }\r\n            else if (_this.arrayA[value[0] + 1][value[1]] == 0) {\r\n                _this.arrayA[value[0] + 1][value[1]] = _this.stepCount;\r\n                arr.push([value[0] + 1, value[1]]);\r\n            }\r\n            if (_this.arrayA[value[0]][value[1] - 1] == 'Z') {\r\n                zFind = true;\r\n            }\r\n            else if (_this.arrayA[value[0]][value[1] - 1] == 0) {\r\n                _this.arrayA[value[0]][value[1] - 1] = _this.stepCount;\r\n                arr.push([value[0], value[1] - 1]);\r\n            }\r\n            if (_this.arrayA[value[0]][value[1] + 1] == 'Z') {\r\n                zFind = true;\r\n            }\r\n            else if (_this.arrayA[value[0]][value[1] + 1] == 0) {\r\n                _this.arrayA[value[0]][value[1] + 1] = _this.stepCount;\r\n                arr.push([value[0], value[1] + 1]);\r\n            }\r\n        });\r\n        this.stepCount++;\r\n        if (zFind) {\r\n            var metaObj = { y: this.meta[0], x: this.meta[1], val: \"Z\" };\r\n            this.way.push(metaObj);\r\n        }\r\n        if (zFind || this.stepCount == 0)\r\n            this.firstMatchWay(this.meta[0], this.meta[1]);\r\n        else if (arr.length != 0)\r\n            this.step(arr);\r\n    };\r\n    /**\r\n     *\r\n     *@function firstMatchWay wykonuje się tylko raz.\r\n     Od najwyższego numeru w tablicy (patrz funkcja step())\r\n     funkcja wyszukuje dookoła niższego pola o jeden,\r\n     \\kiedy go znajdzie wysyła parametry tego pola funkcji matchWay()\r\n     i dodaje do way[] znalezione pole\r\n     *\r\n     * @param y zawiera pozycję y \"Z\" w tablicy array\r\n     * @param x zawiera pozycję x \"Z\" w tablicy array\r\n     *\r\n     */\r\n    pathFinder.prototype.firstMatchWay = function (y, x) {\r\n        var arrAllChar = [];\r\n        var zFind = false;\r\n        var aFind = false;\r\n        var arrOnlyNum = [];\r\n        arrAllChar.push({ y: y - 1, x: x, val: this.arrayA[y - 1][x] });\r\n        arrAllChar.push({ y: y + 1, x: x, val: this.arrayA[y + 1][x] });\r\n        arrAllChar.push({ y: y, x: x - 1, val: this.arrayA[y][x - 1] });\r\n        arrAllChar.push({ y: y, x: x + 1, val: this.arrayA[y][x + 1] });\r\n        for (var i = 0; i < arrAllChar.length; i++) {\r\n            if (typeof arrAllChar[i]['val'] === 'string' || arrAllChar[i]['val'] instanceof String) {\r\n                if (arrAllChar[i]['val'] == 'A') {\r\n                    aFind = true;\r\n                }\r\n            }\r\n            else if (arrAllChar[i]['val'] != 0) {\r\n                {\r\n                    zFind = true;\r\n                    arrOnlyNum.push(arrAllChar[i]);\r\n                }\r\n            }\r\n        }\r\n        arrOnlyNum = arrOnlyNum.sort(function (a, b) { return b['val'] - a['val']; });\r\n        if (zFind || arrOnlyNum.length != 0) {\r\n            this.way.push(arrOnlyNum[0]);\r\n        }\r\n        if (aFind || arrOnlyNum.length != 0)\r\n            this.matchWay(this.way[this.way.length - 1]['y'], this.way[this.way.length - 1]['x']);\r\n    };\r\n    /**\r\n     *\r\n     * @function matchWay\r\n     * Od najwyższego numeru w tablicy (patrz funkcja step())\r\n     * funkcja wyszukuje dookoła niższego pola o jeden,\r\n     * kiedy go znajdzie wywołuje samą siebie z x,y znalezionego pola\r\n     * by dojś do samego \"A\" cały czas dodając poprzednie pola do way[].\r\n     *\r\n     * Tymsamym tworzy w way[] tworzy nam się cała ścieżka\r\n     * @param y\r\n     * @param x\r\n     */\r\n    pathFinder.prototype.matchWay = function (y, x) {\r\n        var arr = [];\r\n        var isFind = false;\r\n        var aFind = false;\r\n        arr.push({ y: y - 1, x: x, val: this.arrayA[y - 1][x] });\r\n        arr.push({ y: y + 1, x: x, val: this.arrayA[y + 1][x] });\r\n        arr.push({ y: y, x: x - 1, val: this.arrayA[y][x - 1] });\r\n        arr.push({ y: y, x: x + 1, val: this.arrayA[y][x + 1] });\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (arr[i]['val'] == 'A') {\r\n                aFind = true;\r\n            }\r\n            else if (arr[i]['val'] == this.way[this.way.length - 1]['val'] - 1) {\r\n                if (!isFind) {\r\n                    this.way.push(arr[i]);\r\n                    isFind = true;\r\n                }\r\n            }\r\n        }\r\n        if (!aFind && isFind)\r\n            this.matchWay(this.way[this.way.length - 1]['y'], this.way[this.way.length - 1]['x']);\r\n    };\r\n    return pathFinder;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pathFinder);\r\n\n\n//# sourceURL=webpack://kulki/./src/components/pathFinder.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Game */ \"./src/components/Game.ts\");\n\r\n/**\r\n * Games wywołuje klasę Game w której całą gra się toczy. Argumentem jest wielkość mapy\r\n */\r\nvar games = new _components_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](9);\r\n\n\n//# sourceURL=webpack://kulki/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;